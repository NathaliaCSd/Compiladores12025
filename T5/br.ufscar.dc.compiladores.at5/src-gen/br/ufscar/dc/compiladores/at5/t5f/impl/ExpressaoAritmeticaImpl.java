/**
 * generated by Xtext 2.39.0
 */
package br.ufscar.dc.compiladores.at5.t5f.impl;

import br.ufscar.dc.compiladores.at5.t5f.ExpressaoAritmetica;
import br.ufscar.dc.compiladores.at5.t5f.OutroTermoAritmetico;
import br.ufscar.dc.compiladores.at5.t5f.T5fPackage;
import br.ufscar.dc.compiladores.at5.t5f.TermoAritmetico;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expressao Aritmetica</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.at5.t5f.impl.ExpressaoAritmeticaImpl#getTermos <em>Termos</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.at5.t5f.impl.ExpressaoAritmeticaImpl#getOutros <em>Outros</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExpressaoAritmeticaImpl extends MinimalEObjectImpl.Container implements ExpressaoAritmetica
{
  /**
   * The cached value of the '{@link #getTermos() <em>Termos</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTermos()
   * @generated
   * @ordered
   */
  protected EList<TermoAritmetico> termos;

  /**
   * The cached value of the '{@link #getOutros() <em>Outros</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutros()
   * @generated
   * @ordered
   */
  protected EList<OutroTermoAritmetico> outros;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpressaoAritmeticaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return T5fPackage.Literals.EXPRESSAO_ARITMETICA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<TermoAritmetico> getTermos()
  {
    if (termos == null)
    {
      termos = new EObjectContainmentEList<TermoAritmetico>(TermoAritmetico.class, this, T5fPackage.EXPRESSAO_ARITMETICA__TERMOS);
    }
    return termos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OutroTermoAritmetico> getOutros()
  {
    if (outros == null)
    {
      outros = new EObjectContainmentEList<OutroTermoAritmetico>(OutroTermoAritmetico.class, this, T5fPackage.EXPRESSAO_ARITMETICA__OUTROS);
    }
    return outros;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case T5fPackage.EXPRESSAO_ARITMETICA__TERMOS:
        return ((InternalEList<?>)getTermos()).basicRemove(otherEnd, msgs);
      case T5fPackage.EXPRESSAO_ARITMETICA__OUTROS:
        return ((InternalEList<?>)getOutros()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case T5fPackage.EXPRESSAO_ARITMETICA__TERMOS:
        return getTermos();
      case T5fPackage.EXPRESSAO_ARITMETICA__OUTROS:
        return getOutros();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case T5fPackage.EXPRESSAO_ARITMETICA__TERMOS:
        getTermos().clear();
        getTermos().addAll((Collection<? extends TermoAritmetico>)newValue);
        return;
      case T5fPackage.EXPRESSAO_ARITMETICA__OUTROS:
        getOutros().clear();
        getOutros().addAll((Collection<? extends OutroTermoAritmetico>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case T5fPackage.EXPRESSAO_ARITMETICA__TERMOS:
        getTermos().clear();
        return;
      case T5fPackage.EXPRESSAO_ARITMETICA__OUTROS:
        getOutros().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case T5fPackage.EXPRESSAO_ARITMETICA__TERMOS:
        return termos != null && !termos.isEmpty();
      case T5fPackage.EXPRESSAO_ARITMETICA__OUTROS:
        return outros != null && !outros.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ExpressaoAritmeticaImpl
