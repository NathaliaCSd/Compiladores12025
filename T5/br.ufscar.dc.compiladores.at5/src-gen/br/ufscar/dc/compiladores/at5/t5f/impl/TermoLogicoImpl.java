/**
 * generated by Xtext 2.39.0
 */
package br.ufscar.dc.compiladores.at5.t5f.impl;

import br.ufscar.dc.compiladores.at5.t5f.ExpressaoRelacional;
import br.ufscar.dc.compiladores.at5.t5f.T5fPackage;
import br.ufscar.dc.compiladores.at5.t5f.TermoLogico;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Termo Logico</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.at5.t5f.impl.TermoLogicoImpl#isNao <em>Nao</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.at5.t5f.impl.TermoLogicoImpl#getRel <em>Rel</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TermoLogicoImpl extends MinimalEObjectImpl.Container implements TermoLogico
{
  /**
   * The default value of the '{@link #isNao() <em>Nao</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNao()
   * @generated
   * @ordered
   */
  protected static final boolean NAO_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNao() <em>Nao</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNao()
   * @generated
   * @ordered
   */
  protected boolean nao = NAO_EDEFAULT;

  /**
   * The cached value of the '{@link #getRel() <em>Rel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRel()
   * @generated
   * @ordered
   */
  protected ExpressaoRelacional rel;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TermoLogicoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return T5fPackage.Literals.TERMO_LOGICO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNao()
  {
    return nao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNao(boolean newNao)
  {
    boolean oldNao = nao;
    nao = newNao;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, T5fPackage.TERMO_LOGICO__NAO, oldNao, nao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExpressaoRelacional getRel()
  {
    return rel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRel(ExpressaoRelacional newRel, NotificationChain msgs)
  {
    ExpressaoRelacional oldRel = rel;
    rel = newRel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, T5fPackage.TERMO_LOGICO__REL, oldRel, newRel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRel(ExpressaoRelacional newRel)
  {
    if (newRel != rel)
    {
      NotificationChain msgs = null;
      if (rel != null)
        msgs = ((InternalEObject)rel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - T5fPackage.TERMO_LOGICO__REL, null, msgs);
      if (newRel != null)
        msgs = ((InternalEObject)newRel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - T5fPackage.TERMO_LOGICO__REL, null, msgs);
      msgs = basicSetRel(newRel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, T5fPackage.TERMO_LOGICO__REL, newRel, newRel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case T5fPackage.TERMO_LOGICO__REL:
        return basicSetRel(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case T5fPackage.TERMO_LOGICO__NAO:
        return isNao();
      case T5fPackage.TERMO_LOGICO__REL:
        return getRel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case T5fPackage.TERMO_LOGICO__NAO:
        setNao((Boolean)newValue);
        return;
      case T5fPackage.TERMO_LOGICO__REL:
        setRel((ExpressaoRelacional)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case T5fPackage.TERMO_LOGICO__NAO:
        setNao(NAO_EDEFAULT);
        return;
      case T5fPackage.TERMO_LOGICO__REL:
        setRel((ExpressaoRelacional)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case T5fPackage.TERMO_LOGICO__NAO:
        return nao != NAO_EDEFAULT;
      case T5fPackage.TERMO_LOGICO__REL:
        return rel != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nao: ");
    result.append(nao);
    result.append(')');
    return result.toString();
  }

} //TermoLogicoImpl
