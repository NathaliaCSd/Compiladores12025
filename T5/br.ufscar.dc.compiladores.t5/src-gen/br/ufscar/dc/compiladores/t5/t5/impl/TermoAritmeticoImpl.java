/**
 * generated by Xtext 2.39.0
 */
package br.ufscar.dc.compiladores.t5.t5.impl;

import br.ufscar.dc.compiladores.t5.t5.FatorAritmetico;
import br.ufscar.dc.compiladores.t5.t5.OutroFatorAritmetico;
import br.ufscar.dc.compiladores.t5.t5.T5Package;
import br.ufscar.dc.compiladores.t5.t5.TermoAritmetico;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Termo Aritmetico</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.t5.t5.impl.TermoAritmeticoImpl#getFatores <em>Fatores</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.t5.t5.impl.TermoAritmeticoImpl#getOutros <em>Outros</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TermoAritmeticoImpl extends MinimalEObjectImpl.Container implements TermoAritmetico
{
  /**
   * The cached value of the '{@link #getFatores() <em>Fatores</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFatores()
   * @generated
   * @ordered
   */
  protected EList<FatorAritmetico> fatores;

  /**
   * The cached value of the '{@link #getOutros() <em>Outros</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutros()
   * @generated
   * @ordered
   */
  protected EList<OutroFatorAritmetico> outros;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TermoAritmeticoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return T5Package.Literals.TERMO_ARITMETICO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FatorAritmetico> getFatores()
  {
    if (fatores == null)
    {
      fatores = new EObjectContainmentEList<FatorAritmetico>(FatorAritmetico.class, this, T5Package.TERMO_ARITMETICO__FATORES);
    }
    return fatores;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OutroFatorAritmetico> getOutros()
  {
    if (outros == null)
    {
      outros = new EObjectContainmentEList<OutroFatorAritmetico>(OutroFatorAritmetico.class, this, T5Package.TERMO_ARITMETICO__OUTROS);
    }
    return outros;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case T5Package.TERMO_ARITMETICO__FATORES:
        return ((InternalEList<?>)getFatores()).basicRemove(otherEnd, msgs);
      case T5Package.TERMO_ARITMETICO__OUTROS:
        return ((InternalEList<?>)getOutros()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case T5Package.TERMO_ARITMETICO__FATORES:
        return getFatores();
      case T5Package.TERMO_ARITMETICO__OUTROS:
        return getOutros();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case T5Package.TERMO_ARITMETICO__FATORES:
        getFatores().clear();
        getFatores().addAll((Collection<? extends FatorAritmetico>)newValue);
        return;
      case T5Package.TERMO_ARITMETICO__OUTROS:
        getOutros().clear();
        getOutros().addAll((Collection<? extends OutroFatorAritmetico>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case T5Package.TERMO_ARITMETICO__FATORES:
        getFatores().clear();
        return;
      case T5Package.TERMO_ARITMETICO__OUTROS:
        getOutros().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case T5Package.TERMO_ARITMETICO__FATORES:
        return fatores != null && !fatores.isEmpty();
      case T5Package.TERMO_ARITMETICO__OUTROS:
        return outros != null && !outros.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TermoAritmeticoImpl
